


    <SwitchPreference
        android:defaultValue="true"
        android:key="example_switch"
        android:summary="@string/pref_description_social_recommendations"
        android:title="@string/pref_title_social_recommendations" />

    <!-- NOTE: EditTextPreference accepts EditText attributes. -->
    <!-- NOTE: EditTextPreference's summary should be set to its value by the activity code. -->
    <EditTextPreference
        android:capitalize="words"
        android:defaultValue="@string/pref_default_display_name"
        android:inputType="textCapWords"
        android:key="example_text"
        android:maxLines="1"
        android:selectAllOnFocus="true"
        android:singleLine="true"
        android:title="@string/pref_title_display_name" />

    <!-- NOTE: Hide buttons to simplify the UI. Users can touch outside the dialog to
         dismiss it. -->
    <!-- NOTE: ListPreference's summary should be set to its value by the activity code. -->
    <ListPreference
        android:defaultValue="-1"
        android:entries="@array/pref_example_list_titles"
        android:entryValues="@array/pref_example_list_values"
        android:key="example_list"
        android:negativeButtonText="@null"
        android:positiveButtonText="@null"
        android:title="@string/pref_title_add_friends_to_messages" />


<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android">

    <!-- A 'parent' preference, which enables/disables child preferences (below)
         when checked/unchecked. -->
    <SwitchPreference
        android:defaultValue="true"
        android:key="notifications_new_message"
        android:title="@string/pref_title_new_message_notifications" />

    <!-- Allows the user to choose a ringtone in the 'notification' category. -->
    <!-- NOTE: This preference will be enabled only when the checkbox above is checked. -->
    <!-- NOTE: RingtonePreference's summary should be set to its value by the activity code. -->
    <RingtonePreference
        android:defaultValue="content://settings/system/notification_sound"
        android:dependency="notifications_new_message"
        android:key="notifications_new_message_ringtone"
        android:ringtoneType="notification"
        android:title="@string/pref_title_ringtone" />

    <!-- NOTE: This preference will be enabled only when the checkbox above is checked. -->
    <SwitchPreference
        android:defaultValue="true"
        android:dependency="notifications_new_message"
        android:key="notifications_new_message_vibrate"
        android:title="@string/pref_title_vibrate" />

</PreferenceScreen>


<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android">

    <!-- NOTE: Hide buttons to simplify the UI. Users can touch outside the dialog to
         dismiss it. -->
    <!-- NOTE: ListPreference's summary should be set to its value by the activity code. -->
    <ListPreference
        android:defaultValue="180"
        android:entries="@array/pref_sync_frequency_titles"
        android:entryValues="@array/pref_sync_frequency_values"
        android:key="sync_frequency"
        android:negativeButtonText="@null"
        android:positiveButtonText="@null"
        android:title="@string/pref_title_sync_frequency" />

    <!-- This preference simply launches an intent when selected. Use this UI sparingly, per
         design guidelines. -->
    <Preference android:title="@string/pref_title_system_sync_settings">
        <intent android:action="android.settings.SYNC_SETTINGS" />
    </Preference>

</PreferenceScreen>


} else if (preference instanceof RingtonePreference) {
                // For ringtone preferences, look up the correct display value
                // using RingtoneManager.
                if (TextUtils.isEmpty(stringValue)) {
                    // Empty values correspond to 'silent' (no ringtone).
                    preference.setSummary(R.string.pref_ringtone_silent);

                } else {
                    Ringtone ringtone = RingtoneManager.getRingtone(
                            preference.getContext(), Uri.parse(stringValue));

                    if (ringtone == null) {
                        // Clear the summary if there was a lookup error.
                        preference.setSummary(null);
                    } else {
                        // Set the summary to reflect the new ringtone display
                        // name.
                        String name = ringtone.getTitle(preference.getContext());
                        preference.setSummary(name);
                    }
                }



<EditTextPreference
        android:defaultValue="-11.1102432"
        android:key="@string/pref_mon_k_lvdta0"
        android:inputType="numberDecimal|numberSigned"
        android:maxLines="1"
        android:selectAllOnFocus="true"
        android:singleLine="true"
        android:title="@string/pref_mon_t_lvdta0" />

    <EditTextPreference
        android:defaultValue="0.00032752"
        android:key="@string/pref_mon_k_lvdta1"
        android:inputType="numberDecimal|numberSigned"
        android:maxLines="1"
        android:selectAllOnFocus="true"
        android:singleLine="true"
        android:title="@string/pref_mon_t_lvdta1" />

    <EditTextPreference
        android:defaultValue="0"
        android:key="@string/pref_mon_k_lvdta2"
        android:inputType="numberDecimal|numberSigned"
        android:maxLines="1"
        android:selectAllOnFocus="true"
        android:singleLine="true"
        android:title="@string/pref_mon_t_lvdta2" />



    <EditTextPreference
        android:defaultValue="0"
        android:key="@string/pref_mon_k_lvdtmin"
        android:inputType="numberDecimal|numberSigned"
        android:maxLines="1"
        android:selectAllOnFocus="true"
        android:singleLine="true"
        android:title="@string/pref_mon_t_lvdtmin" />


    <EditTextPreference
        android:defaultValue="65000"
        android:key="@string/pref_mon_k_lvdtmax"
        android:inputType="numberDecimal|numberSigned"
        android:maxLines="1"
        android:selectAllOnFocus="true"
        android:singleLine="true"
        android:title="@string/pref_mon_t_lvdtmax" />




    <EditTextPreference
        android:defaultValue="0"
        android:key="@string/pref_mon_k_lvdtoffset"
        android:inputType="numberDecimal|numberSigned"
        android:maxLines="1"
        android:selectAllOnFocus="true"
        android:singleLine="true"
        android:title="@string/pref_mon_t_lvdtoffset" />


    <EditTextPreference
        android:defaultValue="1"
        android:key="@string/pref_mon_k_lvdtslope"
        android:inputType="numberDecimal|numberSigned"
        android:maxLines="1"
        android:selectAllOnFocus="true"
        android:singleLine="true"
        android:title="@string/pref_mon_t_lvdtslope" />




        coefs[1] = Double.valueOf();
        coefs[2] = Double.valueOf();
        limits[0] = Double.valueOf();
        limits[1] = Double.valueOf(preferences.getString(getString(R.string.pref_mon_k_lvdtmax), "10"));
        recal[0] = Double.valueOf(preferences.getString(getString(R.string.pref_mon_k_lvdtoffset), "0"));
        recal[1] = Double.valueOf(preferences.getString(getString(R.string.pref_mon_k_lvdtslope), "1"));


        et_lvdta0.setText(String.format(Locale.ENGLISH, "%10.7f", coefs[0]));
        et_lvdta1.setText(String.format(Locale.ENGLISH, "%10.7f", coefs[1]));
        et_lvdta2.setText(String.format(Locale.ENGLISH, "%10.7f", coefs[2]));
        et_lvdtmin.setText(String.valueOf(limits[0]));
        et_lvdtmax.setText(String.valueOf(limits[1]));

